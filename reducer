#!/usr/local/bin//python3.9
##!/Users/jfuerst/anaconda/bin/python

###############################################################
#                                                             #
#                     IMPORT MODULES                          #
#                                                             #
###############################################################
import numpy as np
import sys
import pyproj

###############################################################
#                                                             #
#                        CONSTANTS                            #
#                                                             #
###############################################################

thresh_dx   = 0.0
noval       = -9999

input_path  = 'C:/Users/mu92vogu/Desktop/Thickness Modelling/processed_shp/'
input_fname = 'Perito_Moreno_Ice_Thickness'

p33 = pyproj.Proj(proj='utm', zone=33, ellps='WGS84')
#p33 = pyproj.Proj(init='epsg:32718')

###############################################################
#                                                             #
#                      INPUT FIELDS                           #
#                                                             #
###############################################################

ll=0
with open(input_path+'/'+input_fname+'.csv', 'r') as thefile:
    for line in thefile:
        columns = line.split()

        if ll == 0:
            xx0   = [columns[1-1]]
            yy0   = [columns[2-1]]
            thi0  = [columns[3-1]]
            el0   = [columns[4-1]]
            unc0  = [columns[5-1]]
            date0 = [columns[6-1]]
            print(xx0,yy0,thi0,el0,unc0,date0)

        else:
            xx0   += [columns[1-1]]
            yy0   += [columns[2-1]]
            thi0  += [columns[3-1]]
            el0   += [columns[4-1]]
            unc0  += [columns[5-1]]
            date0 += [columns[6-1]]

        ll = ll+1

n1 = int(len(thi0))
xx   = np.zeros(len(thi0))
yy   = np.zeros(len(thi0))
thi  = np.zeros(len(thi0))
el   = np.zeros(len(thi0))
unc  = np.zeros(len(thi0))
date = np.zeros(len(thi0))

for ll in range(0,len(thi0)):
    xx[ll] = float(xx0[ll])
    yy[ll] = float(yy0[ll])
    thi[ll] = float(thi0[ll])
    el[ll] = float(el0[ll])
    unc[ll] = float(unc0[ll])
    date[ll] = int(date0[ll])




#xx   = np.array(xx0)
#yy   = np.array(yy0)
#thi  = np.array(thi0)
#el   = np.array(el0)
#unc  = np.array(unc0)
#date = np.array(date0)

#obs = loadmatrix.load_matrix_from_file(input_path+'/'+input_fname+'.csv')
#
#xx  = obs[:,0]
#yy  = obs[:,1]
#thi = obs[:,2]
#el  = obs[:,3]
#unc = obs[:,4]
#date= obs[:,5]

#print(thi)
#print(np.shape(np.array(thi)))
n1 = int(len(thi0))


print(n1)

print(xx[1:3]/2)

###############################################################
#                                                             #
#                       PROCESSING                            #
#                                                             #
###############################################################

###
#   Sort out measuremnts closer than 50m (DEM siez)
###
dist = np.zeros((n1,1))
mask = np.zeros((n1,1))
ll=0
vec = n1+1
for ii in range(0,n1):
    if np.shape(np.where(np.array(vec)==ii))[1]==0:
        dist = np.zeros((n1-ii-1,1))
        mask = np.zeros((n1-ii-1,1))
        dist = np.sqrt((float(xx[ii])-np.array(xx[ii+1:n1]))**2+(float(yy[ii])-np.array(yy[ii+1:n1]))**2)
        mask[dist<thresh_dx] = 1
        if np.sum(mask) > 0.5:
            aa=np.where(mask==1)
            bb=np.transpose(np.array(aa))
            cc=np.transpose(bb[:,0])+ii+1
            dd=list(cc)
            if ll == 0:
                vec  = dd
                ll += len(dd)
            else:
                for jj in range(0,len(dd)):
                    vec += [dd[jj]]
                ll += len(dd)

indies=np.array(vec)

with open(input_path+'/'+input_fname+'_reduced'+str(int(thresh_dx))+'m.csv','w') as thefile:
    for ii in range(0,n1):
        if np.shape(np.where(indies==ii))[1]==0:
            lon,lat = p33(xx[ii],yy[ii],inverse=True)
            thefile.write("%18.16e\t%18.16e\t%9.4f\t%9.4f\t%9.4f\t%i \n" % (float(lon),float(lat),float(thi[ii]),float(el[ii]),float(unc[ii]),int(date[ii])))



